Metadata-Version: 1.1
Name: packaging
Version: 15.2
Summary: Core utilities for Python packages
Home-page: https://github.com/pypa/packaging
Author: Donald Stufft
Author-email: donald@stufft.io
License: Apache License, Version 2.0
Description: packaging
        =========
        
        Core utilities for Python packages
        
        
        Documentation
        -------------
        
        `documentation`_
        
        
        Discussion
        ----------
        
        If you run into bugs, you can file them in our `issue tracker`_.
        
        You can also join ``#pypa`` on Freenode to ask questions or get involved.
        
        
        .. _`documentation`: https://packaging.pypa.io/
        .. _`issue tracker`: https://github.com/pypa/packaging/issues
        
        Changelog
        ---------
        
        15.2 - 2015-05-13
        ~~~~~~~~~~~~~~~~~
        
        * Fix an error where the arbitary specifier (``===``) was not correctly
          allowing pre-releases when it was being used.
        
        * Expose the specifier and version parts through properties on the
          ``Specifier`` classes.
        
        * Allow iterating over the ``SpecifierSet`` to get access to all of the
          ``Specifier`` instances.
        
        * Allow testing if a version is contained within a specifier via the ``in``
          operator.
        
        
        15.1 - 2015-04-13
        ~~~~~~~~~~~~~~~~~
        
        * Fix a logic error that was causing inconsistent answers about whether or not
          a pre-release was contained within a ``SpecifierSet`` or not.
        
        
        15.0 - 2015-01-02
        ~~~~~~~~~~~~~~~~~
        
        * Add ``Version().is_postrelease`` and ``LegacyVersion().is_postrelease`` to
          make it easy to determine if a release is a post release.
        
        * Add ``Version().base_version`` and ``LegacyVersion().base_version`` to make
          it easy to get the public version without any pre or post release markers.
        
        * Support the update to PEP 440 which removed the implied ``!=V.*`` when using
          either ``>V`` or ``<V`` and which instead special cased the handling of
          pre-releases, post-releases, and local versions when using ``>V`` or ``<V``.
        
        
        14.5 - 2014-12-17
        ~~~~~~~~~~~~~~~~~
        
        * Normalize release candidates as ``rc`` instead of ``c``.
        
        * Expose the ``VERSION_PATTERN`` constant, a regular expression matching
          a valid version.
        
        
        14.4 - 2014-12-15
        ~~~~~~~~~~~~~~~~~
        
        * Ensure that versions are normalized before comparison when used in a
          specifier with a less than (``<``) or greater than (``>``) operator.
        
        
        14.3 - 2014-11-19
        ~~~~~~~~~~~~~~~~~
        
        * **BACKWARDS INCOMPATIBLE** Refactor specifier support so that it can sanely
          handle legacy specifiers as well as PEP 440 specifiers.
        
        * **BACKWARDS INCOMPATIBLE** Move the specifier support out of
          ``packaging.version`` into ``packaging.specifiers``.
        
        
        14.2 - 2014-09-10
        ~~~~~~~~~~~~~~~~~
        
        * Add prerelease support to ``Specifier``.
        * Remove the ability to do ``item in Specifier()`` and replace it with
          ``Specifier().contains(item)`` in order to allow flags that signal if a
          prerelease should be accepted or not.
        * Add a method ``Specifier().filter()`` which will take an iterable and returns
          an iterable with items that do not match the specifier filtered out.
        
        
        14.1 - 2014-09-08
        ~~~~~~~~~~~~~~~~~
        
        * Allow ``LegacyVersion`` and ``Version`` to be sorted together.
        * Add ``packaging.version.parse()`` to enable easily parsing a version string
          as either a ``Version`` or a ``LegacyVersion`` depending on it's PEP 440
          validity.
        
        
        14.0 - 2014-09-05
        ~~~~~~~~~~~~~~~~~
        
        * Initial release.
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
