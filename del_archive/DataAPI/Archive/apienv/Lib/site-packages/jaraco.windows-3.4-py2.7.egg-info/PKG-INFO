Metadata-Version: 1.1
Name: jaraco.windows
Version: 3.4
Summary: Windows Routines by Jason R. Coombs
Home-page: http://pypi.python.org/pypi/jaraco.windows
Author: Jason R. Coombs
Author-email: jaraco@jaraco.com
License: MIT
Description: jaraco.windows
        ==============
        
        .. contents::
        
        Status and License
        ------------------
        
        ``jaraco.windows`` aims to provide a pure-python interface to Windows
        APIs using ctypes. This package is not designed to be exhaustive, but
        rather to supply interfaces as they are needed by the contributors.
        
        ``jaraco.windows`` is written by Jason R. Coombs.  It is licensed under an
        `MIT-style permissive license
        <http://www.opensource.org/licenses/mit-license.php>`_.
        
        You can install it with ``easy_install jaraco.util``, or from the
        `mercurial repository
        <http://bitbucket.org/jaraco/jaraco.windows/get/tip.zip#egg=jaraco.windows-dev>`_ with
        ``easy_install jaraco.windows==dev``.
        
        Package Contents
        ----------------
        
        ``jaraco.windows`` contains several modules for different purposes. For now,
        read the source. Eventually, I will put high-level descriptions of the modules
        here.
        
        Installation
        ------------
        
        You should install this module the normal way using setuptools or distribute.
        
        If you want to monkeypatch the os module to include symlink compatibility, you
        should add the following to your ``usercustomize`` or ``sitecustomize`` module:
        
        	``import jaraco.windows.filesystem as fs; fs.patch_os_module()``
        
        Thereafter, you should be able to use ``os.symlink`` and ``os.readlink`` in Windows
        Vista and later using the same interface as on Unix.
        
        Note that ``jaraco.windows.filesystem.symlink`` takes an additional optional
        parameter ``target_is_directory``, which must be specified if the target is not
        present and is expected to be a directory once present.
        
        Contribute
        ----------
        
        If jaraco.windows doesn't supply the interface you require for your
        application, consider creating the interface and providing a patch
        to the author.
        
        Changes
        -------
        
        3.4
        ~~~
        
        * Add ``set_html`` function to ``clipboard`` module.
        
        3.3
        ~~~
        
        * Backported `Paramiko #193 <https://github.com/paramiko/paramiko/issues/193>`_
          (`change <https://github.com/paramiko/paramiko/commit/d8738b1b0f10e2f70ac69c3e3dbf10e496c8a67f>`_). Use RtlMoveMemory in favor
          of memcpy.
        * Fixed AccessViolation on Python 3 in mmap module.
        * Fixed AttributeError in security module.
        
        3.2
        ~~~
        
        * Dropped dependency on jaraco.util in favor of smaller packages.
        
        3.1.2
        ~~~~~
        
        * Correct typo in jaraco.windows.api.filesystem (Issue #4).
        
        3.1.1
        ~~~~~
        
        * Correct invocation of enver.
        
        3.1
        ~~~
        
        * Added clipboard.get_image helper.
        
        3.0.1
        ~~~~~
        
        * Substantial fixes on Python 3.
        * Fixed regression in clipboard module.
        * Restored changes from 2.16, unintentionally omitted from 3.0.
        
        3.0
        ~~~
        
        * Moved many of the API definitions to the ``jaraco.windows.api`` package.
        
        2.16
        ~~~~
        
        * Allow enver to be invoked with python -m jaraco.windows.environ
        * Add nominal support for credential vault.
        
        2.15.1
        ~~~~~~
        
        * Fixed constants around ``power.no_sleep``.
        
        2.15
        ~~~~
        
        * Improved Python 3 support including working gclip and pclip commands.
        
        2.14
        ~~~~
        
        * Added py2exe support to the package.
        
        2.13.2
        ~~~~~~
        
        * Improvements to file change handling, reducing duplicates.
        
        2.13
        ~~~~
        
        * Added `no_sleep` context manager to the power module.
        
        2.12
        ~~~~
        
        * Added `add` method to the environ RegisteredEnvironments. Use it to add
          a value to a list of values but only if it's not already present.
        
        2.11.1
        ~~~~~~
        
        * Fixed issue in set_unicode_text.
        
        2.11
        ~~~~
        
        * Add `clipboard.set_unicode_text`.
        
        2.10
        ~~~~
        
        * Fixed issue where MemoryMap wouldn't read null bytes.
        * Added security.get_security_attributes_for_user.
        
        2.9
        ~~~
        
        * Added mmap module with MemoryMap class. This class allows the client to
          specify SECURITY_ATTRIBUTES, which the Python mmap module does not.
        * Added security module with support for security descriptors and security
          attributes.
        
        2.8
        ~~~
        
        * Added vpn module with support for creating PPTP connections.
        
        2.7
        ~~~
        
        * Added filesystem.SetFileAttributes
        
        2.6
        ~~~
        
        * Fixed import issue in jaraco.windows.filesystem on Python 3.
        * Added cookie module from jaraco.net.
        * Fixed issue in filesystem.islink() where a call against a nonexistent
          file could raise an Exception.
        
        2.5
        ~~~
        
        * Moved timers module from jaraco.util.
        * Added jaraco.windows.cred with initial support for Windows Credential
          Manager.
        
        2.4
        ~~~
        
        * Moved filechange notification from jaraco.util.
        
        2.3
        ~~~
        
        * Added filesystem.GetFileAttributes.
        * Added services module for working with Windows Services (currently uses
          pywin32).
        
        2.2
        ~~~
        
        * Fixes by wkornewald for issue #1 - Symlink relative path deficiencies.
        * Added jaraco.windows.message.SendMessageTimeout.
        * Fixed issue where environment changes would stall on SendMessage.
        * SendMessage now uses the correct type for lParam, but will still accept
          string types.
        
        2.1
        ~~~
        
        * Added jaraco.windows.user module (with get_user_name function).
        * Added get_unicode_text to clipboard module.
        
        2.0
        ~~~
        
        * Added clipboard.set_text function for a simple routine for setting
          clipboard text.
        * Added support for editing environment variables in a text-editor.
        * Added clipboard.get_html and clipboard.HTMLSnippet for supporting
          the HTML format from the clipboard.
        
        1.9.1
        ~~~~~
        
        * Fixed issue with clipboard handling of null-terminated strings
        
        1.9
        ~~~
        
        * Added eventlog utility
        * Added support for other clipboard formats (including DIB and DIBV5), and now clipboards to proper memory locking while reading the resource
        * Added registry module
        * Moved office module to jaraco.office project
        
        1.8
        ~~~
        
        * Added 2to3 build support - now installs on Python 3
        * Removed default import of jaraco.windows.net into jaraco.windows
        * Fixed division operator issue in jaraco.windows.reparse.
        
        1.7
        ~~~
        
        * Added option to enver to remove values from a path or other semi-
          colon-separated value.
        * Added privilege module.
        * Made `jaraco.windows.error.WindowsError` a subclass of
          `__builtin__.WindowsError`.
        * Added office module with MS Word based PDF Converter.
        * Added early implementation of clipboard support.
        * Added delay option to xmouse.
        
        1.6
        ~~~
        
        * Added monkeypatch for os.symlink and os.readlink.
        * Added find-symlinks command.
        
        1.5
        ~~~
        
        * NB!! Switched the order of the parameters for symlink and link to match the
          signature found in the ``os`` module. This will absolutely break any implementations
          that worked with ``jaraco.windows`` prior to 1.5.
        
        1.4
        ~~~
        
        * Added more robust support for symlink support (including a symlink traversal
          routine that works even when the target is locked). This method uses explicit
          reparse point parsing, using the new reparse module.
        * Added support for hardlinks.
        * Added jaraco.windows.lib for locating loaded modules.
        * Added command line parameters to environ to allow override of default
          append/replace behavior.
        * Added power monitoring utilities.
        * Began work on GUI testing objects in jaraco.windows.gui.test, based on watsup.
        * Added filesystem.GetBinaryType
        * Added filesystem.SHFileOperation (useful for sending items to a Recycle Bin).
        * Updated enver to support appending to a non-existent variable.
        * Added a 'show' option to xmouse
        * Added routines to support the Microsoft Data Protection API (DPAPI).
        
        1.3
        ~~~
        
        * Added -U option to enver
        
        1.2
        ~~~
        
        * Added this documentation
        * Updated the project website to use PYPI directly.
        * Improved deployment support (fixes issues with easy_install)
        * Fixed issue with PATH and PATHEXT handling in enver.
        
        1.1
        ~~~
        
        * Added support for persistent environment variable setting (inspired by
          enver.py)
        
        1.0
        ~~~
        
        * Initial release
        * Includes xmouse script for enabling/disabling focus-follows-mouse
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: Microsoft :: Windows
